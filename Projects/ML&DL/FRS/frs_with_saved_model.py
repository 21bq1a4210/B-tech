# -*- coding: utf-8 -*-
"""FRS with saved model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cw2Y7IBqp59LOVIFjTyBWKd8yrlJLoJc
"""

#@title Run and uplode FRM.h5
from google.colab import files

# Upload the model file
uploaded = files.upload()

"""#Installing and updating the libraries"""

!pip install --upgrade keras

!pip install keras-preprocessing

!pip install tensorflow

"""#Code for Face Recognition"""

#@title Loding the necessary libraries
import numpy as np
import tensorflow as tf
import keras
from keras.models import Sequential
from keras.layers import Conv2D,MaxPooling2D,Dense,Flatten,Dropout
import matplotlib.pyplot as plt
from keras.layers import BatchNormalization
from keras_preprocessing import image
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# @title Creating a Training Data Generator and Obtaining Class Names
train_dir="/content/drive/MyDrive/FRS/Original Images/Original Images"
generator = ImageDataGenerator()
train_ds = generator.flow_from_directory(train_dir,target_size=(224, 224),batch_size=32)
classes = list(train_ds.class_indices.keys())
print(classes)

#@title Creating an instance for save model

from keras.models import load_model
# Load the model
model = load_model('FSM.h5')

#@title creating a function for predicting face
def predict_image(image_path):
    img = image.load_img(image_path, target_size=(224,224,3))
    plt.imshow(img)
    plt.show()
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    images = np.vstack([x])
    pred = model.predict(images, batch_size=32)
    print("Actual: "+(image_path.split("/")[-1]).split("_")[0])
    print("Predicted: "+classes[np.argmax(pred)])

predict_image("/content/drive/MyDrive/FRS/Original Images/Original Images/Brad Pitt/Brad Pitt_70.jpg")

predict_image("/content/Brand Pitt Test_1.webp")

predict_image("/content/Brad Pitt test2.jpeg")

predict_image("/content/drive/MyDrive/FRS/Original Images/Original Images/Elizabeth Olsen/Elizabeth Olsen_9.jpg")

predict_image("/content/Elizabeth Olsen t2.jpeg")